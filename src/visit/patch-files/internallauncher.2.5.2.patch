--- visit2.5.2/src/bin/internallauncher	2012-07-31 15:56:00.000000000 -0700
+++ internallauncher.2.5.2	2014-08-28 10:34:38.602599670 -0700
@@ -1888,6 +1888,32 @@
 }
 
 # ----
+# HACK for Gordon @ SDSC
+#
+# ----
+$IsRunningOnGordon_SDSC = 0;
+if ( $host =~ /^gordon/  || $host =~ /gcn/ )
+{
+    $IsRunningOnGordon_SDSC = 1;
+    $ENV{LD_LIBRARY_PATH} = join ':' ,
+         ("/opt/intel/composer_xe_2013.1.117/compiler/lib/intel64","/opt/visit/thirdparty/hdf5/1.8.7/linux-x86_64_icc/lib","/opt/visit/thirdparty/h5part/1.6.6/linux-x86_64_icc/lib","/opt/openmpi/intel/ib/lib","/opt/visit/2.5.2/linux-x86_64/lib",$ENV{LD_LIBRARY_PATH});
+    push @visitargs, "--mesa-lib", "/opt/visit/2.5.2/linux-x86_64/lib/libOSMesa.so";
+}
+
+# ----
+# HACK for trestles @ SDSC
+#
+# ----
+$IsRunningOnTrestles_SDSC = 0;
+if ( $host =~ /^trestles-login\d+/ )
+{
+    $IsRunningOnTrestles_SDSC = 1;
+     $ENV{LD_LIBRARY_PATH} = join ':' ,
+         ("/opt/intel/Compiler/11.1/072/lib/intel64");
+#Dont bother adding LD_LIBRARY_PATH for visit libs here as they get messed up later
+}
+
+# ----
 # HACK for yana, alastor, hopi, aztec, inca  @ LLNL
 #
 # ----
@@ -3141,7 +3167,24 @@
             {
                 @mpicmd = ("mpirun");
                 push @mpicmd, @sublaunchargs if $sublaunchargs_set;
-                push @mpicmd, "-np", $procs if $procs_set;
+                if ($IsRunningOnGordon_SDSC)
+                {
+                    $tmpprocs = $procs * $nodes;
+                    push @mpicmd, "-np", $tmpprocs;
+                    push @mpicmd, "-machinefile", "\$PBS_NODEFILE";
+                    #push @mpicmd, "MV2_NUM_HCAS=1", "";
+                    #push @mpicmd, "MV2_IBA_HCA=mlx4_0", "";
+                }
+                elsif ($IsRunningOnTrestles_SDSC)
+                {
+                    $tmpprocs = $procs * $nodes;
+                    push @mpicmd, "-np", $tmpprocs;
+                    push @mpicmd, "-x", "PBS_JOBID";
+                }
+                else
+                {
+                	push @mpicmd, "-np", $procs if $procs_set;
+		}
                 push @mpicmd, "-machinefile", $machinefile if $machinefile_set;
                 push @mpicmd, generate_args_valgrind(@debug_valgrind_args)
                               if $debug_valgrind;
@@ -3264,6 +3307,34 @@
                 print TFILE 'eval $(modulecmd sh unload xt-shmem)',"\n";
                 print TFILE "export CRAY_ROOTFS=DSL\n";
             }
+            if ($IsRunningOnGordon_SDSC)
+            {
+                if ($part eq "large")
+                {
+                   #To test for future amit
+                   #print TFILE "export LD_LIBRARY_PATH=/usr/apps/compilers/ScaleMP/mpich2/1.3.2/lib64:/usr/apps/compilers/intel/Compiler/11.1/038/lib/intel64:\$LD_LIBRARY_PATH\n";
+                   #print TFILE "export VSMP_PLACEMENT=PACKED\n";
+                   #print TFILE "export VSMP_VERBOSE=YES\n";
+                   #print TFILE "export VSMP_MEM_PIN=YES\n";
+                   #print TFILE "vsmputil --unpinall\n\n";
+                } else {
+                        print TFILE "source /etc/profile.d/modules.sh\n";
+                        print TFILE "module unload mvapich2_ib\n";
+                        print TFILE "module load openmpi_ib\n";
+                        print TFILE "export LD_LIBRARY_PATH=/opt/visit/thirdparty/hdf5/1.8.7/linux-x86_64_icc/lib:/opt/visit/thirdparty/h5part/1.6.6/linux-x86_64_icc/lib:/opt/openmpi/intel/ib/lib:/opt/visit/2.5.2/linux-x86_64/lib:\$LD_LIBRARY_PATH\n";
+                }
+
+            }
+            if ($IsRunningOnTrestles_SDSC)
+            {
+               print TFILE "source /etc/profile.d/modules.sh\n";
+               print TFILE "module purge\n";
+               print TFILE "module load intel\n";
+               print TFILE "module load openmpi\n";
+               print TFILE "export LD_LIBRARY_PATH=/opt/visit/2.5.2/linux-x86_64/lib:\$LD_LIBRARY_PATH\n";
+               print TFILE "export VISIT_MESA_LIB=/opt/visit/2.5.2/linux-x86_64/lib/libOSMesa.so\n";
+            }
+
             print TFILE "@sublaunchprecmd", "\n", if $sublaunchprecmd_set;
             print TFILE "@mpicmd";
             print TFILE "@sublaunchpostcmd", "\n", if $sublaunchpostcmd_set;
@@ -3274,6 +3345,11 @@
                 `chmod 755 $tfilename`;
             }
             @parcmd = ($plauncher);
+            if ($IsRunningOnGordon_SDSC || $IsRunningOnTrestles_SDSC)
+            {
+                # full path to qsub hack until SDSC non-interactive shells work correctly
+                @parcmd = ("/opt/torque/bin/qsub");
+            }
             if ($IsRunningOnRanger_TACC)
             {
                 # full path to qsub hack until TACC non-interactive shells work correctly
@@ -3403,6 +3479,31 @@
                     push @parcmd, "-l", "mppwidth=$procs";
                 }
             }
+            elsif ($IsRunningOnGordon_SDSC)
+            {
+                push @parcmd, "-l", "nodes=$nodes:ppn=$procs:native";
+                push @parcmd, "-v", "QOS=0";
+                #push @parcmd, "-V"; #inherit shell Environment
+            }
+            elsif ($IsRunningOnTrestles_SDSC)
+            {   #Work around to handle normal vs OnDemand vs RunAtRisk case
+                if ($part eq "normal" || $part eq "shared")
+                {
+                  push @parcmd, "-v", "QOS=0";
+                }
+                elsif ($part eq "ondemand")
+                { #Set the queue back to "normal" as "ondemand" is artificial
+                  $part="normal";
+                  push @parcmd, "-v", "QOS=4";
+                }
+                elsif ($part eq "runatrisk")
+                { #Set the queue back to "normal" as "runatrisk" is artificial
+                  $part="normal";
+                  push @parcmd, "-v", "Catalina_run_at_risk=1";
+                  push @parcmd, "-v", "QOS=0";
+                }
+                push @parcmd, "-l", "nodes=$nodes:ppn=$procs";
+            }
             elsif ($IsRunningOnJaguar_ORNL || $IsRunningOnKraken_UTK)
             {
                 $qsubNumNodeStr = "size";
